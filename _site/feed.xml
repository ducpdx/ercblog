<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="http://www2.ts.ctw.utwente.nl/ducefd/ercblog/_site//ducefd/ercblog/_site/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.3.1">Jekyll</generator><link href="http://www2.ts.ctw.utwente.nl/ducefd/ercblog/_site//ducefd/ercblog/_site/feed.xml" rel="self" type="application/atom+xml" /><link href="http://www2.ts.ctw.utwente.nl/ducefd/ercblog/_site//ducefd/ercblog/_site/" rel="alternate" type="text/html" /><updated>2017-01-27T14:12:59+01:00</updated><id>http://www2.ts.ctw.utwente.nl/ducefd/ercblog/_site//ducefd/ercblog/_site//</id><title type="html">Duc Nguyen</title><entry><title type="html">Prism Layer in Star-CCM+</title><link href="http://www2.ts.ctw.utwente.nl/ducefd/ercblog/_site//ducefd/ercblog/_site/2017/01/26/prism-layer-meshing.html" rel="alternate" type="text/html" title="Prism Layer in Star-CCM+" /><published>2017-01-26T00:00:00+01:00</published><updated>2017-01-26T00:00:00+01:00</updated><id>http://www2.ts.ctw.utwente.nl/ducefd/ercblog/_site//ducefd/ercblog/_site/2017/01/26/prism-layer-meshing</id><content type="html" xml:base="http://www2.ts.ctw.utwente.nl/ducefd/ercblog/_site//ducefd/ercblog/_site/2017/01/26/prism-layer-meshing.html">&lt;p&gt;Meshing around&lt;/p&gt;</content><summary type="html">Meshing around</summary></entry><entry><title type="html">Toward First Results</title><link href="http://www2.ts.ctw.utwente.nl/ducefd/ercblog/_site//ducefd/ercblog/_site/2017/01/24/toward-first-results.html" rel="alternate" type="text/html" title="Toward First Results" /><published>2017-01-24T00:00:00+01:00</published><updated>2017-01-24T00:00:00+01:00</updated><id>http://www2.ts.ctw.utwente.nl/ducefd/ercblog/_site//ducefd/ercblog/_site/2017/01/24/toward-first-results</id><content type="html" xml:base="http://www2.ts.ctw.utwente.nl/ducefd/ercblog/_site//ducefd/ercblog/_site/2017/01/24/toward-first-results.html">&lt;!-- KaTeX --&gt;
&lt;link rel=&quot;stylesheet&quot; href=&quot;/ducefd/ercblog/_site/public/katex.min.css&quot; /&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;/ducefd/ercblog/_site/public/css/site.css&quot; /&gt;

&lt;script src=&quot;/ducefd/ercblog/_site/public/katex.min.js&quot;&gt;&lt;/script&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=AM_HTMLorMML-full&quot;&gt;&lt;/script&gt;

&lt;!---&lt;script src=&quot;/ducefd/ercblog/_site/public/ASCIIMathTeXImg.js&quot;&gt;&lt;/script&gt;--&gt;
&lt;script src=&quot;/ducefd/ercblog/_site/public/ASCIIMathML.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;/ducefd/ercblog/_site/public/LaTeXMathML.js&quot;&gt;&lt;/script&gt;

&lt;!-- The Normal Distribution --&gt;
&lt;div class=&quot;equation&quot; data-expr=&quot;\displaystyle P(x)=\frac{1}{\sigma\sqrt{2\pi}}e^{-\frac{(x-\mu)^2}{2\sigma ^2}}&quot;&gt;
&lt;/div&gt;
&lt;!--{% endraw }--&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{align}
\sqrt{37} &amp; = \sqrt{\frac{73^2-1}{12^2}} \\
 &amp; = \sqrt{\frac{73^2}{12^2}\cdot\frac{73^2-1}{73^2}} \\ 
 &amp; = \sqrt{\frac{73^2}{12^2}}\sqrt{\frac{73^2-1}{73^2}} \\
 &amp; = \frac{73}{12}\sqrt{1 - \frac{1}{73^2}} \\ 
 &amp; \approx \frac{73}{12}\left(1 - \frac{1}{2\cdot73^2}\right)
\end{align} %]]&gt;&lt;/script&gt;

&lt;div&gt;
``(1, 2)``
&lt;/div&gt;

&lt;div&gt;
``o+``
``((a,b),(c,d))``
&lt;/div&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;o+&lt;/script&gt;

&lt;p&gt;Einsteinâ€™s famous formula is&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;E=mc^2&lt;/code&gt;,&lt;/p&gt;

&lt;p&gt;where &lt;code class=&quot;highlighter-rouge&quot;&gt;E&lt;/code&gt; is energy, &lt;code class=&quot;highlighter-rouge&quot;&gt;m&lt;/code&gt; is mass and &lt;code class=&quot;highlighter-rouge&quot;&gt;c&lt;/code&gt; is the speed of light.&lt;/p&gt;

&lt;script type=&quot;text/javascript&quot;&gt;

    // grab all elements in DOM with the class 'equation'
    var tex = document.getElementsByClassName(&quot;equation&quot;);

    // for each element, render the expression attribute
    Array.prototype.forEach.call(tex, function(el) {
        katex.render(el.getAttribute(&quot;data-expr&quot;), el);
    });
&lt;/script&gt;</content><summary type="html"></summary></entry></feed>
